{"version":3,"sources":["index.js"],"names":["Checker","props","state","input","output","handleChange","bind","palindrome","event","this","setState","target","value","filtered","toLowerCase","split","filter","a","test","reversed","i","length","push","className","action","type","placeholder","onChange","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8NAIMA,G,wDACJ,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,IAEV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAPJ,E,yDASHE,GACXC,KAAKC,SAAS,CAACP,MAAOK,EAAMG,OAAOC,U,mCAWvC,IARI,IACEC,EADYJ,KAAKP,MAAMC,MAAMW,cAAcC,MAAM,IAChCC,QAAO,SAACC,GAE7B,GADY,YACHC,KAAKD,GACZ,OAAOA,KAGLE,EAAW,GACTC,EAAIP,EAASQ,OAAS,EAAGD,GAAK,EAAGA,IACvCD,EAASG,KAAKT,EAASO,IAEzB,IAAI,IAAIA,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IAClC,GAAIP,EAASO,KAAOD,EAASC,GAC3B,OAAOX,KAAKC,SAAS,CAACN,OAAQ,UAGlC,OAAOK,KAAKC,SAAS,CAACN,OAAQ,W,+BAG5B,OAAO,qBAAKmB,UAAU,OAAf,SACL,uBAAMC,OAAO,IAAb,UACE,oDACA,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBd,MAAOH,KAAKP,MAAMC,MAAOwB,SAAUlB,KAAKJ,eAC1F,wBAAQuB,QAASnB,KAAKF,WAAtB,mBACA,6BAAKE,KAAKP,MAAME,kB,GAtCFyB,IAAMC,YA6C5BC,IAASC,OAAO,cAAChC,EAAD,IAAaiC,SAASC,eAAe,W","file":"static/js/main.4b821157.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Checker extends React.Component{\n  constructor(props){\n      super(props)\n      this.state = {\n        input: '',\n        output: ''\n      }\n      this.handleChange = this.handleChange.bind(this)\n      this.palindrome = this.palindrome.bind(this)\n    }\n    handleChange(event){\n      this.setState({input: event.target.value})\n    }\n    palindrome(){\n      const input = this.state.input.toLowerCase().split('')\n  const filtered = input.filter((a)=> {\n    let regex = /[a-z0-9]/i\n    if(regex.test(a)){\n      return a\n    }\n  })\n  const reversed = []\n  for(let i = filtered.length - 1; i >= 0; i--){\n    reversed.push(filtered[i])\n  }\n  for(let i = 0; i < filtered.length; i++){\n    if (filtered[i] !== reversed[i]){\n      return this.setState({output: 'false'})\n    }\n  }\n  return this.setState({output: 'true'})\n    }\n  render(){\n    return <div className='form'>\n      <form action=\"#\">\n        <h2>Palindrome Checker</h2>\n        <input type='text' placeholder='Enter a word... ' value={this.state.input} onChange={this.handleChange}/> \n        <button onClick={this.palindrome}>Check</button>\n        <h3>{this.state.output}</h3>\n     </form>\n    </div>\n  }\n}\n\n\nReactDOM.render(<Checker />, document.getElementById('root'))\n"],"sourceRoot":""}